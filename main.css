@import url('https://fonts.googleapis.com/css2?family=Inter:ital,opsz@0,14..32;1,14..32&display=swap');

/**
  Нормализация блочной модели
 */
*,
::before,
::after {
	box-sizing: border-box;
}

/**
  Убираем внутренние отступы слева тегам списков,
  у которых есть атрибут class
 */
:where(ul, ol):where([class]) {
	padding-left: 0;
}

/**
  Убираем внешние отступы body и двум другим тегам,
  у которых есть атрибут class
 */
body,
:where(blockquote, figure, fieldset):where([class]) {
	margin: 0;
}

/**
  Убираем внешние отступы вертикали нужным тегам,
  у которых есть атрибут class
 */
:where(h1, h2, h3, h4, h5, h6, p, ul, ol, dl):where([class]) {
	margin-block: 0;
}

:where(dd[class]) {
	margin-left: 0;
}

:where(fieldset[class]) {
	padding: 0;
	border: none;
}

/**
  Убираем стандартный маркер маркированному списку,
  у которого есть атрибут class
 */
:where(ul[class]) {
	list-style: none;
}

:where(address[class]) {
	font-style: normal;
}

/**
  Обнуляем вертикальные внешние отступы параграфа,
  объявляем локальную переменную для внешнего отступа вниз,
  чтобы избежать взаимодействие с более сложным селектором
 */
p {
	--paragraphMarginBottom: 24px;

	margin-block: 0;
}

/**
  Внешний отступ вниз для параграфа без атрибута class,
  который расположен не последним среди своих соседних элементов
 */
p:where(:not([class]):not(:last-child)) {
	margin-bottom: var(--paragraphMarginBottom);
}

/**
  Упрощаем работу с изображениями и видео
 */
img,
video {
	display: block;
	max-width: 100%;
	height: auto;
}

/**
  Наследуем свойства шрифт для полей ввода
 */
input,
textarea,
select,
button {
	font: inherit;
}

html {
	/**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
	height: 100%;
	/**
    Убираем скачок интерфейса по горизонтали
    при появлении / исчезновении скроллбара
   */
	scrollbar-gutter: stable;
}

/**
  Плавный скролл
 */
html {
	scroll-behavior: smooth;
}

body {
	/**
    Пригодится в большинстве ситуаций
    (когда, например, нужно будет "прижать" футер к низу сайта)
   */
	min-height: 100%;
	/**
    Унифицированный интерлиньяж
   */
	line-height: 1.5;
}

/**
  Нормализация высоты элемента ссылки при его инспектировании в DevTools
 */
a:where([class]) {
	display: inline-flex;
}

/**
  Курсор-рука при наведении на элемент
 */
button,
label {
	cursor: pointer;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут fill со значением 'none' или начинается с 'url')
 */
:where([fill]:not([fill='none'], [fill^='url'])) {
	fill: currentColor;
}

/**
  Приводим к единому цвету svg-элементы
  (за исключением тех, у которых уже указан
  атрибут stroke со значением 'none')
 */
:where([stroke]:not([stroke='none'], [stroke^='url'])) {
	stroke: currentColor;
}

/**
  Чиним баг задержки смены цвета при взаимодействии с svg-элементами
 */
svg * {
	transition-property: fill, stroke;
}

/**
  Приведение рамок таблиц в классический 'collapse' вид
 */
:where(table) {
	border-collapse: collapse;
	border-color: currentColor;
}

/**
  Удаляем все анимации и переходы для людей,
  которые предпочитают их не использовать
 */
@media (prefers-reduced-motion: reduce) {
	*,
	::before,
	::after {
		animation-duration: 0.01ms !important;
		animation-iteration-count: 1 !important;
		transition-duration: 0.01ms !important;
		scroll-behavior: auto !important;
	}
}

:root {
	--color-accent: hsl(265, 50%, 65%);
	--color-input-border: hsl(265, 65%, 27%);
	--color-task-bg: hsl(265, 40%, 10%);
	--color-success: hsl(160, 50%, 65%);

	--color-gray: hsl(0, 0%, 47%);
	--color-light: hsl(0, 0%, 100%);
	--color-bg: hsl(265, 40%, 6%);

	--font-family: 'Inter', sans-serif;

	--border-radius: 10px;

	--transition-duration: 0.2s;
}

body {
	font-family: 'Inter';
	font-weight: 400;
	font-size: 16px;
	background-color: var(--color-bg);
}

input {
	font: inherit;
	background-color: transparent;
}

input,
button {
	transition-duration: var(--transition-duration);
}

input:focus-visible,
button:focus-visible {
	outline: 1px dashed var(--color-accent);
	outline-offset: 4px;
}

.visually-hidden {
	position: absolute !important;
	width: 1px !important;
	height: 1px !important;
	margin: -1px !important;
	border: 0 !important;
	padding: 0 !important;
	white-space: nowrap !important;
	clip-path: inset(100%) !important;
	clip: rect(0 0 0 0) !important;
	overflow: hidden !important;
}

.todo-app {
	display: flex;
	flex-direction: column;
	row-gap: 60px;

	max-width: 432px;
	padding-inline: 10px;
	margin-inline: auto;
	margin-top: 160px;
}

.task-form {
	display: flex;
	align-items: center;
	justify-content: space-between;
	column-gap: 10px;
}

.task-form__input {
	width: 100%;
	height: 40px;

	border: 1px solid var(--color-input-border);
	border-radius: var(--border-radius);
	outline: 1px solid transparent;
}

.task-form__input:focus-visible {
	border: none;
}

.task-form__input::placeholder {
	color: var(--color-gray);
	padding-left: 15px;
}

.task-form__submit {
	color: var(--color-light);
	background-color: var(--color-accent);

	padding: 9px;
	border-radius: var(--border-radius);
	border: none;

	transition-duration: var(--transition-duration);
}

.task-form__submit:hover {
	color: var(--color-light);
	background-color: var(--color-input-border);
}

.task-form__icon {
	width: 22px;
	height: 22px;
	display: block;
}
